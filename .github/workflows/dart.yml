# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  APP_NAME: uVetClassifier

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
#      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.1'
          channel: 'stable'
          cache: true

      - name: Get packages
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      #- name: Run tests
      #  run: dart test
        
      - name: Build APK
        run: flutter build apk --release --build-number=${{ github.run_number }}

      - name: Retrieve Release Version
        id: versionstep
        run: |
          VERSION=$(more pubspec.yaml | grep version: | cut -d ' ' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
#          echo "::set-output name=VERSION::$VERSION"

      - name: Publish APK
        uses: actions/upload-artifact@v2
        with:
#          name: uVetClassifier_v${{ env.APP_VERSION }}.apk
#          name: ${{ env.APP_NAME }}_v${{ steps.version.outputs.version }}.apk
          name: ${{ env.APP_NAME }}_v${{ steps.versionstep.outputs.VERSION }}.apk
          path: build/app/outputs/flutter-apk/app-release.apk
